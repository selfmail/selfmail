/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ThirdInboxRouteImport } from './routes/third-inbox'
import { Route as SecondInboxRouteImport } from './routes/second-inbox'
import { Route as IndexRouteImport } from './routes/index'
import { Route as OnboardingWorkspaceRouteImport } from './routes/onboarding/workspace'
import { Route as MailMailIdRouteImport } from './routes/mail/$mailId'
import { Route as LegalTosRouteImport } from './routes/legal/tos'
import { Route as AuthResetPasswordRouteImport } from './routes/auth/reset-password'
import { Route as AuthRegisterRouteImport } from './routes/auth/register'
import { Route as AuthLoginRouteImport } from './routes/auth/login'

const ThirdInboxRoute = ThirdInboxRouteImport.update({
  id: '/third-inbox',
  path: '/third-inbox',
  getParentRoute: () => rootRouteImport,
} as any)
const SecondInboxRoute = SecondInboxRouteImport.update({
  id: '/second-inbox',
  path: '/second-inbox',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const OnboardingWorkspaceRoute = OnboardingWorkspaceRouteImport.update({
  id: '/onboarding/workspace',
  path: '/onboarding/workspace',
  getParentRoute: () => rootRouteImport,
} as any)
const MailMailIdRoute = MailMailIdRouteImport.update({
  id: '/mail/$mailId',
  path: '/mail/$mailId',
  getParentRoute: () => rootRouteImport,
} as any)
const LegalTosRoute = LegalTosRouteImport.update({
  id: '/legal/tos',
  path: '/legal/tos',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthResetPasswordRoute = AuthResetPasswordRouteImport.update({
  id: '/auth/reset-password',
  path: '/auth/reset-password',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRegisterRoute = AuthRegisterRouteImport.update({
  id: '/auth/register',
  path: '/auth/register',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/second-inbox': typeof SecondInboxRoute
  '/third-inbox': typeof ThirdInboxRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/legal/tos': typeof LegalTosRoute
  '/mail/$mailId': typeof MailMailIdRoute
  '/onboarding/workspace': typeof OnboardingWorkspaceRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/second-inbox': typeof SecondInboxRoute
  '/third-inbox': typeof ThirdInboxRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/legal/tos': typeof LegalTosRoute
  '/mail/$mailId': typeof MailMailIdRoute
  '/onboarding/workspace': typeof OnboardingWorkspaceRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/second-inbox': typeof SecondInboxRoute
  '/third-inbox': typeof ThirdInboxRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/legal/tos': typeof LegalTosRoute
  '/mail/$mailId': typeof MailMailIdRoute
  '/onboarding/workspace': typeof OnboardingWorkspaceRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/second-inbox'
    | '/third-inbox'
    | '/auth/login'
    | '/auth/register'
    | '/auth/reset-password'
    | '/legal/tos'
    | '/mail/$mailId'
    | '/onboarding/workspace'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/second-inbox'
    | '/third-inbox'
    | '/auth/login'
    | '/auth/register'
    | '/auth/reset-password'
    | '/legal/tos'
    | '/mail/$mailId'
    | '/onboarding/workspace'
  id:
    | '__root__'
    | '/'
    | '/second-inbox'
    | '/third-inbox'
    | '/auth/login'
    | '/auth/register'
    | '/auth/reset-password'
    | '/legal/tos'
    | '/mail/$mailId'
    | '/onboarding/workspace'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SecondInboxRoute: typeof SecondInboxRoute
  ThirdInboxRoute: typeof ThirdInboxRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
  AuthResetPasswordRoute: typeof AuthResetPasswordRoute
  LegalTosRoute: typeof LegalTosRoute
  MailMailIdRoute: typeof MailMailIdRoute
  OnboardingWorkspaceRoute: typeof OnboardingWorkspaceRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/third-inbox': {
      id: '/third-inbox'
      path: '/third-inbox'
      fullPath: '/third-inbox'
      preLoaderRoute: typeof ThirdInboxRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/second-inbox': {
      id: '/second-inbox'
      path: '/second-inbox'
      fullPath: '/second-inbox'
      preLoaderRoute: typeof SecondInboxRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/onboarding/workspace': {
      id: '/onboarding/workspace'
      path: '/onboarding/workspace'
      fullPath: '/onboarding/workspace'
      preLoaderRoute: typeof OnboardingWorkspaceRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/mail/$mailId': {
      id: '/mail/$mailId'
      path: '/mail/$mailId'
      fullPath: '/mail/$mailId'
      preLoaderRoute: typeof MailMailIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/legal/tos': {
      id: '/legal/tos'
      path: '/legal/tos'
      fullPath: '/legal/tos'
      preLoaderRoute: typeof LegalTosRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/reset-password': {
      id: '/auth/reset-password'
      path: '/auth/reset-password'
      fullPath: '/auth/reset-password'
      preLoaderRoute: typeof AuthResetPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SecondInboxRoute: SecondInboxRoute,
  ThirdInboxRoute: ThirdInboxRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
  AuthResetPasswordRoute: AuthResetPasswordRoute,
  LegalTosRoute: LegalTosRoute,
  MailMailIdRoute: MailMailIdRoute,
  OnboardingWorkspaceRoute: OnboardingWorkspaceRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
