/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ThirdInboxRouteImport } from './routes/third-inbox'
import { Route as HealthRouteImport } from './routes/health'
import { Route as IndexRouteImport } from './routes/index'
import { Route as OnboardingWorkspaceRouteImport } from './routes/onboarding/workspace'
import { Route as LegalTosRouteImport } from './routes/legal/tos'
import { Route as AuthVerifyRouteImport } from './routes/auth/verify'
import { Route as AuthResetPasswordRouteImport } from './routes/auth/reset-password'
import { Route as AuthRegisterRouteImport } from './routes/auth/register'
import { Route as AuthLoginRouteImport } from './routes/auth/login'
import { Route as WorkspaceCreateIndexRouteImport } from './routes/workspace/create/index'
import { Route as WorkspaceWorkspaceIdIndexRouteImport } from './routes/workspace/$workspaceId/index'
import { Route as WorkspaceWorkspaceIdWorkflowsRouteImport } from './routes/workspace/$workspaceId/workflows'
import { Route as WorkspaceWorkspaceIdComposeRouteImport } from './routes/workspace/$workspaceId/compose'
import { Route as WorkspaceWorkspaceIdBillingRouteImport } from './routes/workspace/$workspaceId/billing'
import { Route as WorkspaceWorkspaceIdActivityRouteImport } from './routes/workspace/$workspaceId/activity'
import { Route as WorkspaceWorkspaceIdSettingsIndexRouteImport } from './routes/workspace/$workspaceId/settings/index'
import { Route as WorkspaceWorkspaceIdMembersIndexRouteImport } from './routes/workspace/$workspaceId/members/index'
import { Route as WorkspaceWorkspaceIdSettingsUserRouteImport } from './routes/workspace/$workspaceId/settings/user'
import { Route as WorkspaceWorkspaceIdSettingsMemberRouteImport } from './routes/workspace/$workspaceId/settings/member'
import { Route as WorkspaceWorkspaceIdMembersRolesRouteImport } from './routes/workspace/$workspaceId/members/roles'
import { Route as WorkspaceWorkspaceIdMembersPermissionsRouteImport } from './routes/workspace/$workspaceId/members/permissions'
import { Route as WorkspaceWorkspaceIdMembersMemberIdRouteImport } from './routes/workspace/$workspaceId/members/$memberId'
import { Route as WorkspaceWorkspaceIdAddressCreateRouteImport } from './routes/workspace/$workspaceId/address/create'
import { Route as WorkspaceWorkspaceIdAddressAddressIdIndexRouteImport } from './routes/workspace/$workspaceId/address/$addressId/index'
import { Route as WorkspaceWorkspaceIdAddressAddressIdSettingsRouteImport } from './routes/workspace/$workspaceId/address/$addressId/settings'

const ThirdInboxRoute = ThirdInboxRouteImport.update({
  id: '/third-inbox',
  path: '/third-inbox',
  getParentRoute: () => rootRouteImport,
} as any)
const HealthRoute = HealthRouteImport.update({
  id: '/health',
  path: '/health',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const OnboardingWorkspaceRoute = OnboardingWorkspaceRouteImport.update({
  id: '/onboarding/workspace',
  path: '/onboarding/workspace',
  getParentRoute: () => rootRouteImport,
} as any)
const LegalTosRoute = LegalTosRouteImport.update({
  id: '/legal/tos',
  path: '/legal/tos',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthVerifyRoute = AuthVerifyRouteImport.update({
  id: '/auth/verify',
  path: '/auth/verify',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthResetPasswordRoute = AuthResetPasswordRouteImport.update({
  id: '/auth/reset-password',
  path: '/auth/reset-password',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRegisterRoute = AuthRegisterRouteImport.update({
  id: '/auth/register',
  path: '/auth/register',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)
const WorkspaceCreateIndexRoute = WorkspaceCreateIndexRouteImport.update({
  id: '/workspace/create/',
  path: '/workspace/create/',
  getParentRoute: () => rootRouteImport,
} as any)
const WorkspaceWorkspaceIdIndexRoute =
  WorkspaceWorkspaceIdIndexRouteImport.update({
    id: '/workspace/$workspaceId/',
    path: '/workspace/$workspaceId/',
    getParentRoute: () => rootRouteImport,
  } as any)
const WorkspaceWorkspaceIdWorkflowsRoute =
  WorkspaceWorkspaceIdWorkflowsRouteImport.update({
    id: '/workspace/$workspaceId/workflows',
    path: '/workspace/$workspaceId/workflows',
    getParentRoute: () => rootRouteImport,
  } as any)
const WorkspaceWorkspaceIdComposeRoute =
  WorkspaceWorkspaceIdComposeRouteImport.update({
    id: '/workspace/$workspaceId/compose',
    path: '/workspace/$workspaceId/compose',
    getParentRoute: () => rootRouteImport,
  } as any)
const WorkspaceWorkspaceIdBillingRoute =
  WorkspaceWorkspaceIdBillingRouteImport.update({
    id: '/workspace/$workspaceId/billing',
    path: '/workspace/$workspaceId/billing',
    getParentRoute: () => rootRouteImport,
  } as any)
const WorkspaceWorkspaceIdActivityRoute =
  WorkspaceWorkspaceIdActivityRouteImport.update({
    id: '/workspace/$workspaceId/activity',
    path: '/workspace/$workspaceId/activity',
    getParentRoute: () => rootRouteImport,
  } as any)
const WorkspaceWorkspaceIdSettingsIndexRoute =
  WorkspaceWorkspaceIdSettingsIndexRouteImport.update({
    id: '/workspace/$workspaceId/settings/',
    path: '/workspace/$workspaceId/settings/',
    getParentRoute: () => rootRouteImport,
  } as any)
const WorkspaceWorkspaceIdMembersIndexRoute =
  WorkspaceWorkspaceIdMembersIndexRouteImport.update({
    id: '/workspace/$workspaceId/members/',
    path: '/workspace/$workspaceId/members/',
    getParentRoute: () => rootRouteImport,
  } as any)
const WorkspaceWorkspaceIdSettingsUserRoute =
  WorkspaceWorkspaceIdSettingsUserRouteImport.update({
    id: '/workspace/$workspaceId/settings/user',
    path: '/workspace/$workspaceId/settings/user',
    getParentRoute: () => rootRouteImport,
  } as any)
const WorkspaceWorkspaceIdSettingsMemberRoute =
  WorkspaceWorkspaceIdSettingsMemberRouteImport.update({
    id: '/workspace/$workspaceId/settings/member',
    path: '/workspace/$workspaceId/settings/member',
    getParentRoute: () => rootRouteImport,
  } as any)
const WorkspaceWorkspaceIdMembersRolesRoute =
  WorkspaceWorkspaceIdMembersRolesRouteImport.update({
    id: '/workspace/$workspaceId/members/roles',
    path: '/workspace/$workspaceId/members/roles',
    getParentRoute: () => rootRouteImport,
  } as any)
const WorkspaceWorkspaceIdMembersPermissionsRoute =
  WorkspaceWorkspaceIdMembersPermissionsRouteImport.update({
    id: '/workspace/$workspaceId/members/permissions',
    path: '/workspace/$workspaceId/members/permissions',
    getParentRoute: () => rootRouteImport,
  } as any)
const WorkspaceWorkspaceIdMembersMemberIdRoute =
  WorkspaceWorkspaceIdMembersMemberIdRouteImport.update({
    id: '/workspace/$workspaceId/members/$memberId',
    path: '/workspace/$workspaceId/members/$memberId',
    getParentRoute: () => rootRouteImport,
  } as any)
const WorkspaceWorkspaceIdAddressCreateRoute =
  WorkspaceWorkspaceIdAddressCreateRouteImport.update({
    id: '/workspace/$workspaceId/address/create',
    path: '/workspace/$workspaceId/address/create',
    getParentRoute: () => rootRouteImport,
  } as any)
const WorkspaceWorkspaceIdAddressAddressIdIndexRoute =
  WorkspaceWorkspaceIdAddressAddressIdIndexRouteImport.update({
    id: '/workspace/$workspaceId/address/$addressId/',
    path: '/workspace/$workspaceId/address/$addressId/',
    getParentRoute: () => rootRouteImport,
  } as any)
const WorkspaceWorkspaceIdAddressAddressIdSettingsRoute =
  WorkspaceWorkspaceIdAddressAddressIdSettingsRouteImport.update({
    id: '/workspace/$workspaceId/address/$addressId/settings',
    path: '/workspace/$workspaceId/address/$addressId/settings',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/health': typeof HealthRoute
  '/third-inbox': typeof ThirdInboxRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/verify': typeof AuthVerifyRoute
  '/legal/tos': typeof LegalTosRoute
  '/onboarding/workspace': typeof OnboardingWorkspaceRoute
  '/workspace/$workspaceId/activity': typeof WorkspaceWorkspaceIdActivityRoute
  '/workspace/$workspaceId/billing': typeof WorkspaceWorkspaceIdBillingRoute
  '/workspace/$workspaceId/compose': typeof WorkspaceWorkspaceIdComposeRoute
  '/workspace/$workspaceId/workflows': typeof WorkspaceWorkspaceIdWorkflowsRoute
  '/workspace/$workspaceId': typeof WorkspaceWorkspaceIdIndexRoute
  '/workspace/create': typeof WorkspaceCreateIndexRoute
  '/workspace/$workspaceId/address/create': typeof WorkspaceWorkspaceIdAddressCreateRoute
  '/workspace/$workspaceId/members/$memberId': typeof WorkspaceWorkspaceIdMembersMemberIdRoute
  '/workspace/$workspaceId/members/permissions': typeof WorkspaceWorkspaceIdMembersPermissionsRoute
  '/workspace/$workspaceId/members/roles': typeof WorkspaceWorkspaceIdMembersRolesRoute
  '/workspace/$workspaceId/settings/member': typeof WorkspaceWorkspaceIdSettingsMemberRoute
  '/workspace/$workspaceId/settings/user': typeof WorkspaceWorkspaceIdSettingsUserRoute
  '/workspace/$workspaceId/members': typeof WorkspaceWorkspaceIdMembersIndexRoute
  '/workspace/$workspaceId/settings': typeof WorkspaceWorkspaceIdSettingsIndexRoute
  '/workspace/$workspaceId/address/$addressId/settings': typeof WorkspaceWorkspaceIdAddressAddressIdSettingsRoute
  '/workspace/$workspaceId/address/$addressId': typeof WorkspaceWorkspaceIdAddressAddressIdIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/health': typeof HealthRoute
  '/third-inbox': typeof ThirdInboxRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/verify': typeof AuthVerifyRoute
  '/legal/tos': typeof LegalTosRoute
  '/onboarding/workspace': typeof OnboardingWorkspaceRoute
  '/workspace/$workspaceId/activity': typeof WorkspaceWorkspaceIdActivityRoute
  '/workspace/$workspaceId/billing': typeof WorkspaceWorkspaceIdBillingRoute
  '/workspace/$workspaceId/compose': typeof WorkspaceWorkspaceIdComposeRoute
  '/workspace/$workspaceId/workflows': typeof WorkspaceWorkspaceIdWorkflowsRoute
  '/workspace/$workspaceId': typeof WorkspaceWorkspaceIdIndexRoute
  '/workspace/create': typeof WorkspaceCreateIndexRoute
  '/workspace/$workspaceId/address/create': typeof WorkspaceWorkspaceIdAddressCreateRoute
  '/workspace/$workspaceId/members/$memberId': typeof WorkspaceWorkspaceIdMembersMemberIdRoute
  '/workspace/$workspaceId/members/permissions': typeof WorkspaceWorkspaceIdMembersPermissionsRoute
  '/workspace/$workspaceId/members/roles': typeof WorkspaceWorkspaceIdMembersRolesRoute
  '/workspace/$workspaceId/settings/member': typeof WorkspaceWorkspaceIdSettingsMemberRoute
  '/workspace/$workspaceId/settings/user': typeof WorkspaceWorkspaceIdSettingsUserRoute
  '/workspace/$workspaceId/members': typeof WorkspaceWorkspaceIdMembersIndexRoute
  '/workspace/$workspaceId/settings': typeof WorkspaceWorkspaceIdSettingsIndexRoute
  '/workspace/$workspaceId/address/$addressId/settings': typeof WorkspaceWorkspaceIdAddressAddressIdSettingsRoute
  '/workspace/$workspaceId/address/$addressId': typeof WorkspaceWorkspaceIdAddressAddressIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/health': typeof HealthRoute
  '/third-inbox': typeof ThirdInboxRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/verify': typeof AuthVerifyRoute
  '/legal/tos': typeof LegalTosRoute
  '/onboarding/workspace': typeof OnboardingWorkspaceRoute
  '/workspace/$workspaceId/activity': typeof WorkspaceWorkspaceIdActivityRoute
  '/workspace/$workspaceId/billing': typeof WorkspaceWorkspaceIdBillingRoute
  '/workspace/$workspaceId/compose': typeof WorkspaceWorkspaceIdComposeRoute
  '/workspace/$workspaceId/workflows': typeof WorkspaceWorkspaceIdWorkflowsRoute
  '/workspace/$workspaceId/': typeof WorkspaceWorkspaceIdIndexRoute
  '/workspace/create/': typeof WorkspaceCreateIndexRoute
  '/workspace/$workspaceId/address/create': typeof WorkspaceWorkspaceIdAddressCreateRoute
  '/workspace/$workspaceId/members/$memberId': typeof WorkspaceWorkspaceIdMembersMemberIdRoute
  '/workspace/$workspaceId/members/permissions': typeof WorkspaceWorkspaceIdMembersPermissionsRoute
  '/workspace/$workspaceId/members/roles': typeof WorkspaceWorkspaceIdMembersRolesRoute
  '/workspace/$workspaceId/settings/member': typeof WorkspaceWorkspaceIdSettingsMemberRoute
  '/workspace/$workspaceId/settings/user': typeof WorkspaceWorkspaceIdSettingsUserRoute
  '/workspace/$workspaceId/members/': typeof WorkspaceWorkspaceIdMembersIndexRoute
  '/workspace/$workspaceId/settings/': typeof WorkspaceWorkspaceIdSettingsIndexRoute
  '/workspace/$workspaceId/address/$addressId/settings': typeof WorkspaceWorkspaceIdAddressAddressIdSettingsRoute
  '/workspace/$workspaceId/address/$addressId/': typeof WorkspaceWorkspaceIdAddressAddressIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/health'
    | '/third-inbox'
    | '/auth/login'
    | '/auth/register'
    | '/auth/reset-password'
    | '/auth/verify'
    | '/legal/tos'
    | '/onboarding/workspace'
    | '/workspace/$workspaceId/activity'
    | '/workspace/$workspaceId/billing'
    | '/workspace/$workspaceId/compose'
    | '/workspace/$workspaceId/workflows'
    | '/workspace/$workspaceId'
    | '/workspace/create'
    | '/workspace/$workspaceId/address/create'
    | '/workspace/$workspaceId/members/$memberId'
    | '/workspace/$workspaceId/members/permissions'
    | '/workspace/$workspaceId/members/roles'
    | '/workspace/$workspaceId/settings/member'
    | '/workspace/$workspaceId/settings/user'
    | '/workspace/$workspaceId/members'
    | '/workspace/$workspaceId/settings'
    | '/workspace/$workspaceId/address/$addressId/settings'
    | '/workspace/$workspaceId/address/$addressId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/health'
    | '/third-inbox'
    | '/auth/login'
    | '/auth/register'
    | '/auth/reset-password'
    | '/auth/verify'
    | '/legal/tos'
    | '/onboarding/workspace'
    | '/workspace/$workspaceId/activity'
    | '/workspace/$workspaceId/billing'
    | '/workspace/$workspaceId/compose'
    | '/workspace/$workspaceId/workflows'
    | '/workspace/$workspaceId'
    | '/workspace/create'
    | '/workspace/$workspaceId/address/create'
    | '/workspace/$workspaceId/members/$memberId'
    | '/workspace/$workspaceId/members/permissions'
    | '/workspace/$workspaceId/members/roles'
    | '/workspace/$workspaceId/settings/member'
    | '/workspace/$workspaceId/settings/user'
    | '/workspace/$workspaceId/members'
    | '/workspace/$workspaceId/settings'
    | '/workspace/$workspaceId/address/$addressId/settings'
    | '/workspace/$workspaceId/address/$addressId'
  id:
    | '__root__'
    | '/'
    | '/health'
    | '/third-inbox'
    | '/auth/login'
    | '/auth/register'
    | '/auth/reset-password'
    | '/auth/verify'
    | '/legal/tos'
    | '/onboarding/workspace'
    | '/workspace/$workspaceId/activity'
    | '/workspace/$workspaceId/billing'
    | '/workspace/$workspaceId/compose'
    | '/workspace/$workspaceId/workflows'
    | '/workspace/$workspaceId/'
    | '/workspace/create/'
    | '/workspace/$workspaceId/address/create'
    | '/workspace/$workspaceId/members/$memberId'
    | '/workspace/$workspaceId/members/permissions'
    | '/workspace/$workspaceId/members/roles'
    | '/workspace/$workspaceId/settings/member'
    | '/workspace/$workspaceId/settings/user'
    | '/workspace/$workspaceId/members/'
    | '/workspace/$workspaceId/settings/'
    | '/workspace/$workspaceId/address/$addressId/settings'
    | '/workspace/$workspaceId/address/$addressId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  HealthRoute: typeof HealthRoute
  ThirdInboxRoute: typeof ThirdInboxRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
  AuthResetPasswordRoute: typeof AuthResetPasswordRoute
  AuthVerifyRoute: typeof AuthVerifyRoute
  LegalTosRoute: typeof LegalTosRoute
  OnboardingWorkspaceRoute: typeof OnboardingWorkspaceRoute
  WorkspaceWorkspaceIdActivityRoute: typeof WorkspaceWorkspaceIdActivityRoute
  WorkspaceWorkspaceIdBillingRoute: typeof WorkspaceWorkspaceIdBillingRoute
  WorkspaceWorkspaceIdComposeRoute: typeof WorkspaceWorkspaceIdComposeRoute
  WorkspaceWorkspaceIdWorkflowsRoute: typeof WorkspaceWorkspaceIdWorkflowsRoute
  WorkspaceWorkspaceIdIndexRoute: typeof WorkspaceWorkspaceIdIndexRoute
  WorkspaceCreateIndexRoute: typeof WorkspaceCreateIndexRoute
  WorkspaceWorkspaceIdAddressCreateRoute: typeof WorkspaceWorkspaceIdAddressCreateRoute
  WorkspaceWorkspaceIdMembersMemberIdRoute: typeof WorkspaceWorkspaceIdMembersMemberIdRoute
  WorkspaceWorkspaceIdMembersPermissionsRoute: typeof WorkspaceWorkspaceIdMembersPermissionsRoute
  WorkspaceWorkspaceIdMembersRolesRoute: typeof WorkspaceWorkspaceIdMembersRolesRoute
  WorkspaceWorkspaceIdSettingsMemberRoute: typeof WorkspaceWorkspaceIdSettingsMemberRoute
  WorkspaceWorkspaceIdSettingsUserRoute: typeof WorkspaceWorkspaceIdSettingsUserRoute
  WorkspaceWorkspaceIdMembersIndexRoute: typeof WorkspaceWorkspaceIdMembersIndexRoute
  WorkspaceWorkspaceIdSettingsIndexRoute: typeof WorkspaceWorkspaceIdSettingsIndexRoute
  WorkspaceWorkspaceIdAddressAddressIdSettingsRoute: typeof WorkspaceWorkspaceIdAddressAddressIdSettingsRoute
  WorkspaceWorkspaceIdAddressAddressIdIndexRoute: typeof WorkspaceWorkspaceIdAddressAddressIdIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/third-inbox': {
      id: '/third-inbox'
      path: '/third-inbox'
      fullPath: '/third-inbox'
      preLoaderRoute: typeof ThirdInboxRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/health': {
      id: '/health'
      path: '/health'
      fullPath: '/health'
      preLoaderRoute: typeof HealthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/onboarding/workspace': {
      id: '/onboarding/workspace'
      path: '/onboarding/workspace'
      fullPath: '/onboarding/workspace'
      preLoaderRoute: typeof OnboardingWorkspaceRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/legal/tos': {
      id: '/legal/tos'
      path: '/legal/tos'
      fullPath: '/legal/tos'
      preLoaderRoute: typeof LegalTosRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/verify': {
      id: '/auth/verify'
      path: '/auth/verify'
      fullPath: '/auth/verify'
      preLoaderRoute: typeof AuthVerifyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/reset-password': {
      id: '/auth/reset-password'
      path: '/auth/reset-password'
      fullPath: '/auth/reset-password'
      preLoaderRoute: typeof AuthResetPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/workspace/create/': {
      id: '/workspace/create/'
      path: '/workspace/create'
      fullPath: '/workspace/create'
      preLoaderRoute: typeof WorkspaceCreateIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/workspace/$workspaceId/': {
      id: '/workspace/$workspaceId/'
      path: '/workspace/$workspaceId'
      fullPath: '/workspace/$workspaceId'
      preLoaderRoute: typeof WorkspaceWorkspaceIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/workspace/$workspaceId/workflows': {
      id: '/workspace/$workspaceId/workflows'
      path: '/workspace/$workspaceId/workflows'
      fullPath: '/workspace/$workspaceId/workflows'
      preLoaderRoute: typeof WorkspaceWorkspaceIdWorkflowsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/workspace/$workspaceId/compose': {
      id: '/workspace/$workspaceId/compose'
      path: '/workspace/$workspaceId/compose'
      fullPath: '/workspace/$workspaceId/compose'
      preLoaderRoute: typeof WorkspaceWorkspaceIdComposeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/workspace/$workspaceId/billing': {
      id: '/workspace/$workspaceId/billing'
      path: '/workspace/$workspaceId/billing'
      fullPath: '/workspace/$workspaceId/billing'
      preLoaderRoute: typeof WorkspaceWorkspaceIdBillingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/workspace/$workspaceId/activity': {
      id: '/workspace/$workspaceId/activity'
      path: '/workspace/$workspaceId/activity'
      fullPath: '/workspace/$workspaceId/activity'
      preLoaderRoute: typeof WorkspaceWorkspaceIdActivityRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/workspace/$workspaceId/settings/': {
      id: '/workspace/$workspaceId/settings/'
      path: '/workspace/$workspaceId/settings'
      fullPath: '/workspace/$workspaceId/settings'
      preLoaderRoute: typeof WorkspaceWorkspaceIdSettingsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/workspace/$workspaceId/members/': {
      id: '/workspace/$workspaceId/members/'
      path: '/workspace/$workspaceId/members'
      fullPath: '/workspace/$workspaceId/members'
      preLoaderRoute: typeof WorkspaceWorkspaceIdMembersIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/workspace/$workspaceId/settings/user': {
      id: '/workspace/$workspaceId/settings/user'
      path: '/workspace/$workspaceId/settings/user'
      fullPath: '/workspace/$workspaceId/settings/user'
      preLoaderRoute: typeof WorkspaceWorkspaceIdSettingsUserRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/workspace/$workspaceId/settings/member': {
      id: '/workspace/$workspaceId/settings/member'
      path: '/workspace/$workspaceId/settings/member'
      fullPath: '/workspace/$workspaceId/settings/member'
      preLoaderRoute: typeof WorkspaceWorkspaceIdSettingsMemberRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/workspace/$workspaceId/members/roles': {
      id: '/workspace/$workspaceId/members/roles'
      path: '/workspace/$workspaceId/members/roles'
      fullPath: '/workspace/$workspaceId/members/roles'
      preLoaderRoute: typeof WorkspaceWorkspaceIdMembersRolesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/workspace/$workspaceId/members/permissions': {
      id: '/workspace/$workspaceId/members/permissions'
      path: '/workspace/$workspaceId/members/permissions'
      fullPath: '/workspace/$workspaceId/members/permissions'
      preLoaderRoute: typeof WorkspaceWorkspaceIdMembersPermissionsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/workspace/$workspaceId/members/$memberId': {
      id: '/workspace/$workspaceId/members/$memberId'
      path: '/workspace/$workspaceId/members/$memberId'
      fullPath: '/workspace/$workspaceId/members/$memberId'
      preLoaderRoute: typeof WorkspaceWorkspaceIdMembersMemberIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/workspace/$workspaceId/address/create': {
      id: '/workspace/$workspaceId/address/create'
      path: '/workspace/$workspaceId/address/create'
      fullPath: '/workspace/$workspaceId/address/create'
      preLoaderRoute: typeof WorkspaceWorkspaceIdAddressCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/workspace/$workspaceId/address/$addressId/': {
      id: '/workspace/$workspaceId/address/$addressId/'
      path: '/workspace/$workspaceId/address/$addressId'
      fullPath: '/workspace/$workspaceId/address/$addressId'
      preLoaderRoute: typeof WorkspaceWorkspaceIdAddressAddressIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/workspace/$workspaceId/address/$addressId/settings': {
      id: '/workspace/$workspaceId/address/$addressId/settings'
      path: '/workspace/$workspaceId/address/$addressId/settings'
      fullPath: '/workspace/$workspaceId/address/$addressId/settings'
      preLoaderRoute: typeof WorkspaceWorkspaceIdAddressAddressIdSettingsRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  HealthRoute: HealthRoute,
  ThirdInboxRoute: ThirdInboxRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
  AuthResetPasswordRoute: AuthResetPasswordRoute,
  AuthVerifyRoute: AuthVerifyRoute,
  LegalTosRoute: LegalTosRoute,
  OnboardingWorkspaceRoute: OnboardingWorkspaceRoute,
  WorkspaceWorkspaceIdActivityRoute: WorkspaceWorkspaceIdActivityRoute,
  WorkspaceWorkspaceIdBillingRoute: WorkspaceWorkspaceIdBillingRoute,
  WorkspaceWorkspaceIdComposeRoute: WorkspaceWorkspaceIdComposeRoute,
  WorkspaceWorkspaceIdWorkflowsRoute: WorkspaceWorkspaceIdWorkflowsRoute,
  WorkspaceWorkspaceIdIndexRoute: WorkspaceWorkspaceIdIndexRoute,
  WorkspaceCreateIndexRoute: WorkspaceCreateIndexRoute,
  WorkspaceWorkspaceIdAddressCreateRoute:
    WorkspaceWorkspaceIdAddressCreateRoute,
  WorkspaceWorkspaceIdMembersMemberIdRoute:
    WorkspaceWorkspaceIdMembersMemberIdRoute,
  WorkspaceWorkspaceIdMembersPermissionsRoute:
    WorkspaceWorkspaceIdMembersPermissionsRoute,
  WorkspaceWorkspaceIdMembersRolesRoute: WorkspaceWorkspaceIdMembersRolesRoute,
  WorkspaceWorkspaceIdSettingsMemberRoute:
    WorkspaceWorkspaceIdSettingsMemberRoute,
  WorkspaceWorkspaceIdSettingsUserRoute: WorkspaceWorkspaceIdSettingsUserRoute,
  WorkspaceWorkspaceIdMembersIndexRoute: WorkspaceWorkspaceIdMembersIndexRoute,
  WorkspaceWorkspaceIdSettingsIndexRoute:
    WorkspaceWorkspaceIdSettingsIndexRoute,
  WorkspaceWorkspaceIdAddressAddressIdSettingsRoute:
    WorkspaceWorkspaceIdAddressAddressIdSettingsRoute,
  WorkspaceWorkspaceIdAddressAddressIdIndexRoute:
    WorkspaceWorkspaceIdAddressAddressIdIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
